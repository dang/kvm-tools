#!/bin/bash
#
# Make a virsh cluster based on a base image

BASEDIR="${PWD}"

IMGBASE="BASEIMG"
CBASE="clusters"
NUMBOXES=2
NUMNETS=2

# Set usage output
USAGE="[-h |--help] [-i <image-base> | --image-base=<image-base>] [-d <target-dir> | --directory=<target-dir>] [-b <number-boxes> | --number-boxes=<number-boxes>] [-n <number-networks> | --number-networks=<number-networks>] [-r | --remove] <cluster-name>"
LONGUSAGE="\t-h, --help\n\t\tPrint this help message
\t-i <image-base>, --image-base=<image-base>\n\t\tBase cluster image. Default: ./${IMGBASE}
\t-d <target-dir>, --directory=<target-dir>\n\t\tDirectory to place cluster. Default: ./${CBASE}/<cluster-name>
\t-b <number-boxes>, --number-boxes=<number-boxes>\n\t\tNumber of boxes in cluster. Default: ${NUMBOXES}
\t-n <number-networks>, --number-networks=<number-networks>\n\t\tNumber of networks in cluster. Default: ${NUMNETS}
\t-r, --remove\n\t\tRemove the cluster instead of creating.
\t<cluster-name>\n\t\tName of cluster to create"

# Standard functions
die() {
	echo "$@"
	exit 1
}

usage() {
	local myusage;
	if [ -n "${USAGE}" ]; then
		myusage=${USAGE}
	else
		myusage="No usage given"
	fi
	if [ -n "$1" ]; then
		echo "$@"
	fi
	echo ""
	echo "Usage:"
	echo "`basename $0` ${myusage}"
	if [ -n "${LONGUSAGE}" ]; then
		echo -e "${LONGUSAGE}"
	fi
	exit 1
}

# Script name
ME=$(basename $0)

# Parse arguments
ARGS=`getopt -o hi:d:b:n:r --long help,image-base:,directory:,number-boxes,:number-networks:,remove -n "${ME}" -- "$@"`

if [ $? != 0 ] ; then
	usage "invalid arguments"
fi
eval set -- "$ARGS"

while true ; do
	case "$1" in
		-h|--help) usage; shift ;;
		-i|--image-base) IMGBASE=$2 ; shift 2 ;;
		-d|--directory) CDIR=$2 ; shift 2 ;;
		-b|--number-boxes) NUMBOXES=$2 ; shift 2 ;;
		-n|--number-networks) NUMNETS=$2 ; shift 2 ;;
		-r|--remove) REMOVE='y'; shift ;;
		--) shift ; break ;;
		* ) usage "Invalid argument $1";;
	esac
done

# Remaining arguments are in $1, $2, etc. as normal

if [ -z "${1}" ]; then
	usage "No cluster name given"
fi

CNAME="${1}"
if [ -z "${CDIR}" ]; then
	CDIR="${BASEDIR}/${CBASE}/${CNAME}"
fi

if [ -n "${REMOVE}" ]; then
	VIRSH_BOXES=$(virsh list --all | grep ${CNAME} | awk '{print $2}')
	VIRSH_NETS=$(virsh net-list --all | grep ${CNAME} | awk '{print $1}')
	echo "Removing cluster:"
	echo -e "\tCNAME: ${CNAME}"
	echo -e "\tCDIR: ${CDIR}"
	echo -e "\tVIRSH_BOXES: ${VIRSH_BOXES}"
	echo -e "\tVIRSH_NETS: ${VIRSH_NETS}"

	for box in ${VIRSH_BOXES}; do
		virsh destroy ${box}
		virsh undefine ${box} || die "Failed to undefine ${box}"
	done
	for net in ${VIRSH_NETS}; do
		virsh net-destroy ${net} || die "Failed to destroy ${net}"
		#virsh net-undefine ${net} || die "Failed to undefine ${net}"
	done
	if [ -d "${CDIR}" ]; then
		rm -rf "${CDIR}" || die "Failed to remove ${CDIR}"
	fi
	exit
fi

IDIR="${PWD}/${IMGBASE}"

if [ ! -d "${IDIR}" ]; then
	die "No image base directory ${IDIR}"
fi

CBYTES=$(hexdump -n2 -e '/1 ":%02X"' /dev/urandom)

echo "Creating cluster:"
echo -e "\tCNAME: ${CNAME}"
echo -e "\tIMGBASE: ${IMGBASE}"
echo -e "\tIDIR: ${IDIR}"
echo -e "\tCDIR: ${CDIR}"
echo -e "\tNUMBOXES: ${NUMBOXES}"
echo -e "\tNUMNETS: ${NUMNETS}"
echo -e "\tCBYTES: ${CBYTES}"

mkdir -p "${CDIR}" || die "failed to create ${CDIR}"

for net in $(seq -f '%02.0f' 1 ${NUMNETS}); do
	NNAME="${CDIR}/${CNAME}-net${net}.xml"
	cp "${IDIR}/${IMGBASE}-net-template.xml" "${NNAME}" || die "Failed to copy XML template for ${BNUM}"
	NETBYTE=$((${net} + 20))
	sed -i -e "s#CLUSTERNAME#${CNAME}#" -e "s#NETNUM#${net}#" -e "s#NETBYTE#${NETBYTE}#" -e "s#CBYTES#${CBYTES}#" "${NNAME}"

	virsh net-create "${NNAME}" || die "Couldn't create ${NNAME}"
done

for BNUM in $(seq -f '%02.0f' ${NUMBOXES}); do
	cp --sparse=always "${IDIR}/${IMGBASE}.img" "${CDIR}/${CNAME}-box${BNUM}.img"
	DNAME="${CDIR}/${CNAME}-box${BNUM}.xml"
	cp "${IDIR}/${IMGBASE}-box-template.xml" "${DNAME}" || die "Failed to copy XML template for ${BNUM}"

	IFACES=""
	for net in $(seq -f '%02.0f' ${NUMNETS}); do
		SLOTNUM=$((${net} + 10))
		NIFACE=$(sed -e "s#NETNUM#${net}#" -e "s#CLUSTERNAME#${CNAME}#" -e "s#BNUM#${BNUM}#" -e "s#SLOTNUM#${SLOTNUM}#" -e "s#CBYTES#${CBYTES}#" "${IDIR}/${IMGBASE}-iface-template.xml" | sed '{:q;N;s/\n/\\n/g;t q}')
		IFACES+="${NIFACE}\n"
	done

	sed -i -e "s#CLUSTERNAME#${CNAME}#" -e "s#BNUM#${BNUM}#" -e "s#CDIR#$CDIR#" -e "s#CBYTES#${CBYTES}#" -e "s#IFACES#${IFACES}#" ${DNAME}
	virsh define "${DNAME}" || die "Couldn't define ${DNAME}"
done

echo "Cluster ${CNAME} complete."
